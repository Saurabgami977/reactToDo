{"version":3,"sources":["App.module.css","alert.js","Note.js","Input.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","AlertComp","props","Alert","severity","onClose","click","message","useStyles","makeStyles","root","margin","maxWidth","display","justifyContent","alignItems","title","fontSize","pos","marginBottom","Note","classes","Card","className","CardContent","Typography","variant","component","id","CardActions","Button","size","color","onClick","delete","theme","width","marginTop","spacing","Input","useState","notes","setNotes","input","setInput","alert","setAlert","useEffect","timer","setTimeout","clearTimeout","style","onSubmit","length","e","preventDefault","submitHandler","TextField","onChange","target","value","inputHandler","label","type","map","note","filter","deleteNoteHandler","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47c8e5da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__vrzPR\",\"red\":\"App_red__eK5Uk\"};","import Alert from '@material-ui/lab/Alert';\r\nimport React from 'react';\r\n\r\nexport default function AlertComp(props) {\r\n    return (\r\n        <div>\r\n            <Alert severity=\"error\" onClose={props.click}>{props.message}</Alert>\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Card, CardActions, CardContent, makeStyles, Typography } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        margin: '20px auto',\r\n        maxWidth: 1000,\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\nexport default function Note(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div key={props.id}>\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        {props.message} | {props.id}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions >\r\n                    <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => props.delete(props.id)}><DeleteIcon /></Button>\r\n                </CardActions>\r\n            </Card>\r\n        </div >\r\n    )\r\n}\r\n\r\n","import { TextField } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Alert from './alert';\r\nimport Note from './Note';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Input() {\r\n    const classes = useStyles();\r\n    const [notes, setNotes] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const [alert, setAlert] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timer = (alert === true) ? setTimeout(() => setAlert(false), 3000) : null;\r\n        return () => clearTimeout(timer)\r\n    }, [alert]);\r\n    const inputHandler = (e) => {\r\n        setInput(e.target.value)\r\n    };\r\n    const submitHandler = (e, input, notes) => {\r\n        e.preventDefault();\r\n        const id = (notes.length) ? notes[notes.length - 1].id + 1 : 1;\r\n        setNotes([...notes, { message: input, id: id }]);\r\n        setInput('');\r\n        setAlert(false);\r\n    }\r\n    const deleteNoteHandler = (id, notes, setNotes) => {\r\n        setNotes(notes.filter(note => note.id !== id))\r\n    }\r\n    return (\r\n        <div>\r\n            {alert === true ?\r\n                <div className={classes.root}>\r\n                    <Alert\r\n                        click={() => { setAlert(false) }}\r\n                        message='Please Enter Valid Notes' />\r\n                    {/* <Alert severity=\"error\" onClose={() => { setAlert(false) }}></Alert> */}\r\n                </div> : null\r\n            }\r\n            <form\r\n                style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    margin: '30px auto'\r\n                }}\r\n                onSubmit={((input.length) > 2) ? (e) => submitHandler(e, input, notes) : (e) => {\r\n                    e.preventDefault();\r\n                    setAlert(true);\r\n                }}\r\n                key='form'>\r\n                <TextField\r\n                    style={{ width: '900px' }}\r\n                    onChange={(e) => inputHandler(e)}\r\n                    value={input}\r\n                    label=\"Add notes\" />\r\n                <Button\r\n                    size=\"small\"\r\n                    type='submit'\r\n                    variant=\"contained\"\r\n                    color=\"primary\">\r\n                    Add Note\r\n                </Button>\r\n            </form>\r\n            {\r\n                notes.length > 0 ? notes.map(note => (\r\n                    <Note\r\n                        key={note.id}\r\n                        message={note.message}\r\n                        id={note.id}\r\n                        delete={(id) => deleteNoteHandler(id, notes, setNotes)} />\r\n                )) : <Alert message='Nothing to show!' />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import classes from './App.module.css';\nimport Input from './Input';\n\nconst App = () => {\n  return (\n    <div className={classes.App}>\n      <Input />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}